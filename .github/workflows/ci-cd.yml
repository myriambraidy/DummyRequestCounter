name: CI-CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  IMAGE_NAME: dummyrequestcounter
  DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}

jobs:

  lint:
    name:  Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 bandit safety

      - name: Lint with flake8
        run: |
          echo "Running lint checks..."
          flake8 app --count --max-line-length=88 --statistics

      - name: Static security analysis with Bandit
        run: |
          bandit -r app -ll

      - name: Vulnerability scan (safety)
        run: |
          pip install -r requirements.txt
          safety check --full-report || true


  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest httpx fastapi uvicorn redis

      - name: Run tests
        run: pytest -v

 
  build:
    name: Build & Test Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:latest .

      - name: Run container test
        run: |
          docker run -d -p 8000:8000 --name test_container $IMAGE_NAME:latest
          sleep 5
          curl -f http://localhost:8000/health || (docker logs test_container && exit 1)
          docker stop test_container

  deploy:
    name: Deploy to DockerHub
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build image
        run: |
          docker build -t $DOCKER_USER/$IMAGE_NAME:latest .

      - name: Push to Docker Hub
        run: |
          docker push $DOCKER_USER/$IMAGE_NAME:latest
